# Prompt: please help me create some OpenAPI specifications for my API
openapi: 3.0.0
info:
  title: The Web Gallery API
  version: 1.0.0
  description: API for uploading images and managing comments in the Web Gallery.

servers:
  - url: http://localhost:3000

paths:
  /api/images:
    get:
      summary: Get paginated list of images
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 0
            default: 0
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
      responses:
        "200":
          description: List of images with pagination info
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                  limit:
                    type: integer
                  total:
                    type: integer
                  totalPages:
                    type: integer
                  images:
                    type: array
                    items:
                      $ref: "#/components/schemas/Image"

    post:
      summary: Upload a new image
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                title:
                  type: string
                author:
                  type: string
      responses:
        "200":
          description: Image uploaded successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Image"

  /api/images/{id}:
    get:
      summary: Get image by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Image object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Image"
        "404":
          description: Image not found

    delete:
      summary: Delete an image
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Image deleted
        "404":
          description: Image not found

    patch:
      summary: Update an image's title or author
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                author:
                  type: string
      responses:
        "200":
          description: Image updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Image"
        "404":
          description: Image not found

  /api/images/{id}/comments:
    get:
      summary: Get paginated comments for an image
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - in: query
          name: page
          schema:
            type: integer
            default: 0
      responses:
        "200":
          description: List of comments
          content:
            application/json:
              schema:
                type: object
                properties:
                  comments:
                    type: array
                    items:
                      $ref: "#/components/schemas/Comment"

    post:
      summary: Add a comment to an image
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewCommentWithoutImageId"
      responses:
        "200":
          description: Comment added successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"

  /api/comments/{id}:
    patch:
      summary: Update a comment
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                author:
                  type: string
                content:
                  type: string
      responses:
        "200":
          description: Comment updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        "404":
          description: Comment not found

    delete:
      summary: Delete a comment
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Comment deleted
        "404":
          description: Comment not found

components:
  schemas:
    Image:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        author:
          type: string
        url:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Comment:
      type: object
      properties:
        id:
          type: integer
        imageId:
          type: integer
        author:
          type: string
        content:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    NewCommentWithoutImageId:
      type: object
      required: [author, content]
      properties:
        author:
          type: string
        content:
          type: string
